<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>com.emc.documentum.spring</groupId>
    <artifactId>spring-boot-starter-dctm</artifactId>
    <version>0.0.1-SNAPSHOT</version>

    <properties>
        <!-- github server corresponds to entry in ~/.m2/settings.xml -->
        <github.global.server>github</github.global.server>
    </properties>

    <parent>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starters</artifactId>
        <version>1.2.2.RELEASE</version>
    </parent>

    <dependencies>
        <dependency>
            <groupId>com.emc.documentum.spring</groupId>
            <artifactId>spring-data-documentum</artifactId>
            <version>0.0.1-SNAPSHOT</version>
        </dependency>
    </dependencies>



    <distributionManagement>
        <repository>
            <id>internal.repo</id>
            <name>Temporary Staging Repository</name>
            <url>file://${project.build.directory}/mvn-repo</url>
        </repository>
    </distributionManagement>

    <repositories>
        <!--<repository>-->
            <!--<id>artifactory-dev</id>-->
            <!--<url>http://pls-jfrogrepo.lss.emc.com:8081/artifactory/dev-snapshot-local</url>-->
            <!--<snapshots>-->
                <!--<updatePolicy>-->
                    <!--always-->
                <!--</updatePolicy>-->
            <!--</snapshots>-->
        <!--</repository>-->

        <!--<repository>-->
            <!--<id>artifactory</id>-->
            <!--<url>http://pls-jfrogrepo.lss.emc.com:8081/artifactory/internal</url>-->
            <!--<snapshots>-->
                <!--<updatePolicy>-->
                    <!--never-->
                <!--</updatePolicy>-->
            <!--</snapshots>-->
        <!--</repository>-->
    </repositories>


    <!--<distributionManagement>-->
        <!--<snapshotRepository>-->
            <!--<id>artifactory-dev</id>-->
            <!--<name>pls-jfrogrepo.lss.emc.com-snapshots</name>-->
            <!--<url>http://pls-jfrogrepo.lss.emc.com:8081/artifactory/dev-snapshot-local</url>-->
        <!--</snapshotRepository>-->
    <!--</distributionManagement>-->


    <build>
        <plugins>
            <plugin>
                <artifactId>maven-deploy-plugin</artifactId>
                <version>2.8.1</version>
                <configuration>
                    <altDeploymentRepository>internal.repo::default::file://${project.build.directory}/mvn-repo</altDeploymentRepository>
                </configuration>
            </plugin>


            <plugin>
                <groupId>com.github.github</groupId>
                <artifactId>site-maven-plugin</artifactId>
                <version>0.12</version>
                <configuration>
                    <!-- git commit message -->
                    <message>Maven artifacts for ${project.version}</message>
                    <!-- disable webpage processing -->
                    <noJekyll>true</noJekyll>
                    <!-- matches distribution management repository url above -->
                    <outputDirectory>${project.build.directory}/mvn-repo</outputDirectory>
                    <!-- remote branch name -->
                    <branch>refs/heads/mvn-repo</branch>
                    <!-- If you remove this then the old artifact will be removed and new
                     one will replace. But with the merge tag you can just release by changing
                                                      the version -->
                    <merge>true</merge>
                    <includes>
                        <include>**/*</include>
                    </includes>
                    <!-- github repo name -->
                    <repositoryName>mvn-repo</repositoryName>
                    <!-- github username -->
                    <repositoryOwner>mmohen</repositoryOwner>
                </configuration>
                <executions>
                    <execution>
                        <goals>
                            <goal>site</goal>
                        </goals>
                        <phase>deploy</phase>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>

</project>